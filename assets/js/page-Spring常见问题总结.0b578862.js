(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{865:function(a,t,s){"use strict";s.r(t);var n=s(1),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("这篇文章主要是想通过一些问题，加深大家对于 Spring 的理解，所以不会涉及太多的代码！")]),a._v(" "),s("p",[a._v("下面的很多问题我自己在使用 Spring 的过程中也并没有注意，自己也是临时查阅了很多资料和书籍补上的。网上也有一些很多关于 Spring 常见问题/面试题整理的文章，我感觉大部分都是互相 copy，而且很多问题也不是很好，有些回答也存在问题。所以，自己花了一周的业余时间整理了一下，希望对大家有帮助。")]),a._v(" "),s("h2",{attrs:{id:"什么是-spring-框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-spring-框架"}},[a._v("#")]),a._v(" 什么是 Spring 框架?")]),a._v(" "),s("p",[a._v("Spring 是一款开源的轻量级 Java 开发框架，旨在提高开发人员的开发效率以及系统的可维护性。")]),a._v(" "),s("p",[a._v("Spring 翻译过来就是春天的意思，可见其目标和使命就是为 Java 程序员带来春天啊！感动！")]),a._v(" "),s("blockquote",[s("p",[a._v("题外话 ： 语言的流行通常需要一个杀手级的应用，Spring 就是 Java 生态的一个杀手级的应用框架。")])]),a._v(" "),s("p",[a._v("我们一般说 Spring 框架指的都是 Spring Framework，它是很多模块的集合，使用这些模块可以很方便地协助我们进行开发。")]),a._v(" "),s("p",[a._v("比如说 Spring 自带 IoC（Inverse of Control:控制反转） 和 AOP(Aspect-Oriented Programming:面向切面编程)、可以很方便地对数据库进行访问、可以很方便地集成第三方组件（电子邮件，任务，调度，缓存等等）、对单元测试支持比较好、支持 RESTful Java 应用程序的开发。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/38ef122122de4375abcd27c3de8f60b4.png",alt:""}})]),a._v(" "),s("p",[a._v("Spring 最核心的思想就是不重新造轮子，开箱即用！")]),a._v(" "),s("p",[a._v("Spring 提供的核心功能主要是 IoC 和 AOP。学习 Spring ，一定要把 IoC 和 AOP 的核心思想搞懂！")]),a._v(" "),s("ul",[s("li",[a._v("Spring 官网："),s("a",{attrs:{href:"https://spring.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://spring.io/"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("Github 地址： https://github.com/spring-projects/spring-framework")])]),a._v(" "),s("h2",{attrs:{id:"列举一些重要的-spring-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列举一些重要的-spring-模块"}},[a._v("#")]),a._v(" 列举一些重要的 Spring 模块？")]),a._v(" "),s("p",[a._v("下图对应的是 Spring4.x 版本。目前最新的 5.x 版本中 Web 模块的 Portlet 组件已经被废弃掉，同时增加了用于异步响应式处理的 WebFlux 组件。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/photo/2019/e0c60b4606711fc4a0b6faf03230247a.png",alt:"Spring主要模块"}})]),a._v(" "),s("p",[s("strong",[a._v("Spring Core")])]),a._v(" "),s("p",[a._v("核心模块， Spring 其他所有的功能基本都需要依赖于该类库，主要提供 IoC 依赖注入功能的支持。")]),a._v(" "),s("p",[s("strong",[a._v("Spring Aspects")])]),a._v(" "),s("p",[a._v("该模块为与 AspectJ 的集成提供支持。")]),a._v(" "),s("p",[s("strong",[a._v("Spring AOP")])]),a._v(" "),s("p",[a._v("提供了面向切面的编程实现。")]),a._v(" "),s("p",[s("strong",[a._v("Spring Data Access/Integration ：")])]),a._v(" "),s("p",[a._v("Spring Data Access/Integration 由 5 个模块组成：")]),a._v(" "),s("ul",[s("li",[a._v("spring-jdbc : 提供了对数据库访问的抽象 JDBC。不同的数据库都有自己独立的 API 用于操作数据库，而 Java 程序只需要和 JDBC API 交互，这样就屏蔽了数据库的影响。")]),a._v(" "),s("li",[a._v("spring-tx : 提供对事务的支持。")]),a._v(" "),s("li",[a._v("spring-orm : 提供对 Hibernate 等 ORM 框架的支持。")]),a._v(" "),s("li",[a._v("spring-oxm ： 提供对 Castor 等 OXM 框架的支持。")]),a._v(" "),s("li",[a._v("spring-jms : Java 消息服务。")])]),a._v(" "),s("p",[s("strong",[a._v("Spring Web")])]),a._v(" "),s("p",[a._v("Spring Web 由 4 个模块组成：")]),a._v(" "),s("ul",[s("li",[a._v("spring-web ：对 Web 功能的实现提供一些最基础的支持。")]),a._v(" "),s("li",[a._v("spring-webmvc ： 提供对 Spring MVC 的实现。")]),a._v(" "),s("li",[a._v("spring-websocket ： 提供了对 WebSocket 的支持，WebSocket 可以让客户端和服务端进行双向通信。")]),a._v(" "),s("li",[a._v("spring-webflux ：提供对 WebFlux 的支持。WebFlux 是 Spring Framework 5.0 中引入的新的响应式框架。与 Spring MVC 不同，它不需要 Servlet API，是完全异步.")])]),a._v(" "),s("p",[s("strong",[a._v("Spring Test")])]),a._v(" "),s("p",[a._v("Spring 团队提倡测试驱动开发（TDD）。有了控制反转 (IoC)的帮助，单元测试和集成测试变得更简单。")]),a._v(" "),s("p",[a._v("Spring 的测试模块对 JUnit（单元测试框架）、TestNG（类似 JUnit）、Mockito（主要用来 Mock 对象）、PowerMock（解决 Mockito 的问题比如无法模拟 final, static， private 方法）等等常用的测试框架支持的都比较好。")]),a._v(" "),s("h2",{attrs:{id:"spring-ioc-aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-ioc-aop"}},[a._v("#")]),a._v(" Spring IOC & AOP")]),a._v(" "),s("h3",{attrs:{id:"谈谈自己对于-spring-ioc-的了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈自己对于-spring-ioc-的了解"}},[a._v("#")]),a._v(" 谈谈自己对于 Spring IoC 的了解")]),a._v(" "),s("p",[s("strong",[a._v("IoC（Inverse of Control:控制反转）")]),a._v(" 是一种设计思想，而不是一个具体的技术实现。IoC 的思想就是将原本在程序中手动创建对象的控制权，交由 Spring 框架来管理。不过， IoC 并非 Spirng 特有，在其他语言中也有应用。")]),a._v(" "),s("p",[s("strong",[a._v("为什么叫控制反转？")])]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("控制")]),a._v(" ：指的是对象创建（实例化、管理）的权力")]),a._v(" "),s("li",[s("strong",[a._v("反转")]),a._v(" ：控制权交给外部环境（Spring 框架、IoC 容器）")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/java-guide-blog/frc-365faceb5697f04f31399937c059c162.png",alt:""}})]),a._v(" "),s("p",[a._v("将对象之间的相互依赖关系交给 IoC 容器来管理，并由 IoC 容器完成对象的注入。这样可以很大程度上简化应用的开发，把应用从复杂的依赖关系中解放出来。 IoC 容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件/注解即可，完全不用考虑对象是如何被创建出来的。")]),a._v(" "),s("p",[a._v("在实际项目中一个 Service 类可能依赖了很多其他的类，假如我们需要实例化这个 Service，你可能要每次都要搞清这个 Service 所有底层类的构造函数，这可能会把人逼疯。如果利用 IoC 的话，你只需要配置好，然后在需要的地方引用就行了，这大大增加了项目的可维护性且降低了开发难度。")]),a._v(" "),s("p",[a._v("在 Spring 中， IoC 容器是 Spring 用来实现 IoC 的载体， IoC 容器实际上就是个 Map（key，value），Map 中存放的是各种对象。")]),a._v(" "),s("p",[a._v("Spring 时代我们一般通过 XML 文件来配置 Bean，后来开发人员觉得 XML 文件来配置不太好，于是 SpringBoot 注解配置就慢慢开始流行起来。")]),a._v(" "),s("p",[a._v("相关阅读：")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://javadoop.com/post/spring-ioc",target:"_blank",rel:"noopener noreferrer"}},[a._v("IoC 源码阅读"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247486938&idx=1&sn=c99ef0233f39a5ffc1b98c81e02dfcd4&chksm=cea24211f9d5cb07fa901183ba4d96187820713a72387788408040822ffb2ed575d28e953ce7&token=1736772241&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("面试被问了几百遍的 IoC 和 AOP ，还在傻傻搞不清楚？"),s("OutboundLink")],1)])]),a._v(" "),s("h3",{attrs:{id:"谈谈自己对于-aop-的了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈自己对于-aop-的了解"}},[a._v("#")]),a._v(" 谈谈自己对于 AOP 的了解")]),a._v(" "),s("p",[a._v("AOP(Aspect-Oriented Programming:面向切面编程)能够将那些与业务无关，却为业务模块所共同调用的逻辑或责任（例如事务处理、日志管理、权限控制等）封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可拓展性和可维护性。")]),a._v(" "),s("p",[a._v("Spring AOP 就是基于动态代理的，如果要代理的对象，实现了某个接口，那么 Spring AOP 会使用 "),s("strong",[a._v("JDK Proxy")]),a._v("，去创建代理对象，而对于没有实现接口的对象，就无法使用 JDK Proxy 去进行代理了，这时候 Spring AOP 会使用 "),s("strong",[a._v("Cglib")]),a._v(" 生成一个被代理对象的子类来作为代理，如下图所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/photo/2019/926dfc549b06d280a37397f9fd49bf9d.jpg",alt:"SpringAOPProcess"}})]),a._v(" "),s("p",[a._v("当然你也可以使用 "),s("strong",[a._v("AspectJ")]),a._v(" ！Spring AOP 已经集成了 AspectJ ，AspectJ 应该算的上是 Java 生态系统中最完整的 AOP 框架了。")]),a._v(" "),s("h3",{attrs:{id:"spring-aop-和-aspectj-aop-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-aop-和-aspectj-aop-有什么区别"}},[a._v("#")]),a._v(" Spring AOP 和 AspectJ AOP 有什么区别？")]),a._v(" "),s("p",[s("strong",[a._v("Spring AOP 属于运行时增强，而 AspectJ 是编译时增强。")]),a._v(" Spring AOP 基于代理(Proxying)，而 AspectJ 基于字节码操作(Bytecode Manipulation)。")]),a._v(" "),s("p",[a._v("Spring AOP 已经集成了 AspectJ ，AspectJ 应该算的上是 Java 生态系统中最完整的 AOP 框架了。AspectJ 相比于 Spring AOP 功能更加强大，但是 Spring AOP 相对来说更简单，")]),a._v(" "),s("p",[a._v("如果我们的切面比较少，那么两者性能差异不大。但是，当切面太多的话，最好选择 AspectJ ，它比 Spring AOP 快很多。")]),a._v(" "),s("h2",{attrs:{id:"spring-bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean"}},[a._v("#")]),a._v(" Spring bean")]),a._v(" "),s("h3",{attrs:{id:"什么是-bean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-bean"}},[a._v("#")]),a._v(" 什么是 bean？")]),a._v(" "),s("p",[a._v("简单来说，bean 代指的就是那些被 IoC 容器所管理的对象。")]),a._v(" "),s("p",[a._v("我们需要告诉 IoC 容器帮助我们管理哪些对象，这个是通过配置元数据来定义的。配置元数据可以是 XML 文件、注解或者 Java 配置类。")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!-- Constructor-arg with 'value' attribute --\x3e")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("constructor-arg")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("下图简单地展示了 IoC 容器如何使用配置元数据来管理对象。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/062b422bd7ac4d53afd28fb74b2bc94d.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("org.springframework.beans")]),a._v("和 "),s("code",[a._v("org.springframework.context")]),a._v(" 这两个包是 IoC 实现的基础，如果想要研究 IoC 相关的源码的话，可以去看看")]),a._v(" "),s("h3",{attrs:{id:"bean-的作用域有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-的作用域有哪些"}},[a._v("#")]),a._v(" bean 的作用域有哪些?")]),a._v(" "),s("p",[a._v("Spring 中 Bean 的作用域通常有下面几种：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("singleton")]),a._v(" : 唯一 bean 实例，Spring 中的 bean 默认都是单例的，对单例设计模式的应用。")]),a._v(" "),s("li",[s("strong",[a._v("prototype")]),a._v(" : 每次请求都会创建一个新的 bean 实例。")]),a._v(" "),s("li",[s("strong",[a._v("request")]),a._v(" : 每一次 HTTP 请求都会产生一个新的 bean，该 bean 仅在当前 HTTP request 内有效。")]),a._v(" "),s("li",[s("strong",[a._v("session")]),a._v(" : 每一次来自新 session 的 HTTP 请求都会产生一个新的 bean，该 bean 仅在当前 HTTP session 内有效。")]),a._v(" "),s("li",[s("strong",[a._v("global-session")]),a._v(" ： 全局 session 作用域，仅仅在基于 portlet 的 web 应用中才有意义，Spring5 已经没有了。Portlet 是能够生成语义代码(例如：HTML)片段的小型 Java Web 插件。它们基于 portlet 容器，可以像 servlet 一样处理 HTTP 请求。但是，与 servlet 不同，每个 portlet 都有不同的会话。")])]),a._v(" "),s("p",[s("strong",[a._v("如何配置 bean 的作用域呢？")])]),a._v(" "),s("p",[a._v("xml 方式：")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("scope")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("singleton"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("注解方式：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ConfigurableBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("SCOPE_PROTOTYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("personPrototype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"单例-bean-的线程安全问题了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单例-bean-的线程安全问题了解吗"}},[a._v("#")]),a._v(" 单例 bean 的线程安全问题了解吗？")]),a._v(" "),s("p",[a._v("大部分时候我们并没有在项目中使用多线程，所以很少有人会关注这个问题。单例 bean 存在线程问题，主要是因为当多个线程操作同一个对象的时候是存在资源竞争的。")]),a._v(" "),s("p",[a._v("常见的有两种解决办法：")]),a._v(" "),s("ol",[s("li",[a._v("在 bean 中尽量避免定义可变的成员变量。")]),a._v(" "),s("li",[a._v("在类中定义一个 "),s("code",[a._v("ThreadLocal")]),a._v(" 成员变量，将需要的可变成员变量保存在 "),s("code",[a._v("ThreadLocal")]),a._v(" 中（推荐的一种方式）。")])]),a._v(" "),s("p",[a._v("不过，大部分 bean 实际都是无状态（没有实例变量）的（比如 Dao、Service），这种情况下， bean 是线程安全的。")]),a._v(" "),s("h3",{attrs:{id:"component-和-bean-的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-和-bean-的区别是什么"}},[a._v("#")]),a._v(" @Component 和 @Bean 的区别是什么？")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("@Component")]),a._v(" 注解作用于类，而"),s("code",[a._v("@Bean")]),a._v("注解作用于方法。")]),a._v(" "),s("li",[s("code",[a._v("@Component")]),a._v("通常是通过类路径扫描来自动侦测以及自动装配到 Spring 容器中（我们可以使用 "),s("code",[a._v("@ComponentScan")]),a._v(" 注解定义要扫描的路径从中找出标识了需要装配的类自动装配到 Spring 的 bean 容器中）。"),s("code",[a._v("@Bean")]),a._v(" 注解通常是我们在标有该注解的方法中定义产生这个 bean,"),s("code",[a._v("@Bean")]),a._v("告诉了 Spring 这是某个类的实例，当我需要用它的时候还给我。")]),a._v(" "),s("li",[s("code",[a._v("@Bean")]),a._v(" 注解比 "),s("code",[a._v("@Component")]),a._v(" 注解的自定义性更强，而且很多地方我们只能通过 "),s("code",[a._v("@Bean")]),a._v(" 注解来注册 bean。比如当我们引用第三方库中的类需要装配到 "),s("code",[a._v("Spring")]),a._v("容器时，则只能通过 "),s("code",[a._v("@Bean")]),a._v("来实现。")])]),a._v(" "),s("p",[s("code",[a._v("@Bean")]),a._v("注解使用示例：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Configuration")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AppConfig")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransferService")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("transferService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransferServiceImpl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("上面的代码相当于下面的 xml 配置")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("beans")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("transferService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("com.acme.TransferServiceImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("beans")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("下面这个例子是通过 "),s("code",[a._v("@Component")]),a._v(" 无法实现的。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OneService")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        when "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        when "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        when "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h3",{attrs:{id:"将一个类声明为-bean-的注解有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将一个类声明为-bean-的注解有哪些"}},[a._v("#")]),a._v(" 将一个类声明为 bean 的注解有哪些?")]),a._v(" "),s("p",[a._v("我们一般使用 "),s("code",[a._v("@Autowired")]),a._v(" 注解自动装配 bean，要想把类标识成可用于 "),s("code",[a._v("@Autowired")]),a._v(" 注解自动装配的 bean 的类,采用以下注解可实现：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("@Component")]),a._v(" ：通用的注解，可标注任意类为 "),s("code",[a._v("Spring")]),a._v(" 组件。如果一个 Bean 不知道属于哪个层，可以使用"),s("code",[a._v("@Component")]),a._v(" 注解标注。")]),a._v(" "),s("li",[s("code",[a._v("@Repository")]),a._v(" : 对应持久层即 Dao 层，主要用于数据库相关操作。")]),a._v(" "),s("li",[s("code",[a._v("@Service")]),a._v(" : 对应服务层，主要涉及一些复杂的逻辑，需要用到 Dao 层。")]),a._v(" "),s("li",[s("code",[a._v("@Controller")]),a._v(" : 对应 Spring MVC 控制层，主要用户接受用户请求并调用 Service 层返回数据给前端页面。")])]),a._v(" "),s("h3",{attrs:{id:"bean-的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-的生命周期"}},[a._v("#")]),a._v(" bean 的生命周期?")]),a._v(" "),s("blockquote",[s("p",[a._v("下面的内容整理自："),s("a",{attrs:{href:"https://yemengying.com/2016/07/14/spring-bean-life-cycle/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://yemengying.com/2016/07/14/spring-bean-life-cycle/"),s("OutboundLink")],1),a._v(" ，除了这篇文章，再推荐一篇很不错的文章 ："),s("a",{attrs:{href:"https://www.cnblogs.com/zrtqsk/p/3735273.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.cnblogs.com/zrtqsk/p/3735273.html"),s("OutboundLink")],1),a._v(" 。")])]),a._v(" "),s("ul",[s("li",[a._v("Bean 容器找到配置文件中 Spring Bean 的定义。")]),a._v(" "),s("li",[a._v("Bean 容器利用 Java Reflection API 创建一个 Bean 的实例。")]),a._v(" "),s("li",[a._v("如果涉及到一些属性值 利用 "),s("code",[a._v("set()")]),a._v("方法设置一些属性值。")]),a._v(" "),s("li",[a._v("如果 Bean 实现了 "),s("code",[a._v("BeanNameAware")]),a._v(" 接口，调用 "),s("code",[a._v("setBeanName()")]),a._v("方法，传入 Bean 的名字。")]),a._v(" "),s("li",[a._v("如果 Bean 实现了 "),s("code",[a._v("BeanClassLoaderAware")]),a._v(" 接口，调用 "),s("code",[a._v("setBeanClassLoader()")]),a._v("方法，传入 "),s("code",[a._v("ClassLoader")]),a._v("对象的实例。")]),a._v(" "),s("li",[a._v("如果 Bean 实现了 "),s("code",[a._v("BeanFactoryAware")]),a._v(" 接口，调用 "),s("code",[a._v("setBeanFactory()")]),a._v("方法，传入 "),s("code",[a._v("BeanFactory")]),a._v("对象的实例。")]),a._v(" "),s("li",[a._v("与上面的类似，如果实现了其他 "),s("code",[a._v("*.Aware")]),a._v("接口，就调用相应的方法。")]),a._v(" "),s("li",[a._v("如果有和加载这个 Bean 的 Spring 容器相关的 "),s("code",[a._v("BeanPostProcessor")]),a._v(" 对象，执行"),s("code",[a._v("postProcessBeforeInitialization()")]),a._v(" 方法")]),a._v(" "),s("li",[a._v("如果 Bean 实现了"),s("code",[a._v("InitializingBean")]),a._v("接口，执行"),s("code",[a._v("afterPropertiesSet()")]),a._v("方法。")]),a._v(" "),s("li",[a._v("如果 Bean 在配置文件中的定义包含 init-method 属性，执行指定的方法。")]),a._v(" "),s("li",[a._v("如果有和加载这个 Bean 的 Spring 容器相关的 "),s("code",[a._v("BeanPostProcessor")]),a._v(" 对象，执行"),s("code",[a._v("postProcessAfterInitialization()")]),a._v(" 方法")]),a._v(" "),s("li",[a._v("当要销毁 Bean 的时候，如果 Bean 实现了 "),s("code",[a._v("DisposableBean")]),a._v(" 接口，执行 "),s("code",[a._v("destroy()")]),a._v(" 方法。")]),a._v(" "),s("li",[a._v("当要销毁 Bean 的时候，如果 Bean 在配置文件中的定义包含 destroy-method 属性，执行指定的方法。")])]),a._v(" "),s("p",[a._v("图示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/photo/2019/24bc2bad3ce28144d60d9e0a2edf6c7f.jpg",alt:"Spring Bean 生命周期"}})]),a._v(" "),s("p",[a._v("与之比较类似的中文版本:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://images.xiaozhuanlan.com/photo/2019/b5d264565657a5395c2781081a7483e1.jpg",alt:"Spring Bean 生命周期"}})]),a._v(" "),s("h2",{attrs:{id:"spring-mvc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc"}},[a._v("#")]),a._v(" Spring MVC")]),a._v(" "),s("h3",{attrs:{id:"说说自己对于-spring-mvc-了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说说自己对于-spring-mvc-了解"}},[a._v("#")]),a._v(" 说说自己对于 Spring MVC 了解?")]),a._v(" "),s("p",[a._v("MVC 是模型(Model)、视图(View)、控制器(Controller)的简写，其核心思想是通过将业务逻辑、数据、显示分离来组织代码。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/java-guide-blog/image-20210809181452421.png",alt:""}})]),a._v(" "),s("p",[a._v("网上有很多人说 MVC 不是设计模式，只是软件设计规范，我个人更倾向于 MVC 同样是众多设计模式中的一种。"),s("strong",[s("a",{attrs:{href:"https://github.com/iluwatar/java-design-patterns",target:"_blank",rel:"noopener noreferrer"}},[a._v("java-design-patterns"),s("OutboundLink")],1)]),a._v(" 项目中就有关于 MVC 的相关介绍。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/159b3d3e70dd45e6afa81bf06d09264e.png",alt:""}})]),a._v(" "),s("p",[a._v("想要真正理解 Spring MVC，我们先来看看 Model 1 和 Model 2 这两个没有 Spring MVC 的时代。")]),a._v(" "),s("p",[s("strong",[a._v("Model 1 时代")])]),a._v(" "),s("p",[a._v("很多学 Java 后端比较晚的朋友可能并没有接触过 Model 1 时代下的 JavaWeb 应用开发。在 Model1 模式下，整个 Web 应用几乎全部用 JSP 页面组成，只用少量的 JavaBean 来处理数据库连接、访问等操作。")]),a._v(" "),s("p",[a._v("这个模式下 JSP 即是控制层（Controller）又是表现层（View）。显而易见，这种模式存在很多问题。比如控制逻辑和表现逻辑混杂在一起，导致代码重用率极低；再比如前端和后端相互依赖，难以进行测试维护并且开发效率极低。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/java-guide-blog/mvc-mode1.png",alt:"mvc-mode1"}})]),a._v(" "),s("p",[s("strong",[a._v("Model 2 时代")])]),a._v(" "),s("p",[a._v("学过 Servlet 并做过相关 Demo 的朋友应该了解“Java Bean(Model)+ JSP（View）+Servlet（Controller） ”这种开发模式，这就是早期的 JavaWeb MVC 开发模式。")]),a._v(" "),s("ul",[s("li",[a._v("Model:系统涉及的数据，也就是 dao 和 bean。")]),a._v(" "),s("li",[a._v("View：展示模型中的数据，只是用来展示。")]),a._v(" "),s("li",[a._v("Controller：处理用户请求都发送给 ，返回数据给 JSP 并展示给用户。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/java-guide-blog/mvc-model2.png",alt:""}})]),a._v(" "),s("p",[a._v("Model2 模式下还存在很多问题，Model2 的抽象和封装程度还远远不够，使用 Model2 进行开发时不可避免地会重复造轮子，这就大大降低了程序的可维护性和复用性。")]),a._v(" "),s("p",[a._v("于是，很多 JavaWeb 开发相关的 MVC 框架应运而生比如 Struts2，但是 Struts2 比较笨重。")]),a._v(" "),s("p",[s("strong",[a._v("Spring MVC 时代")])]),a._v(" "),s("p",[a._v("随着 Spring 轻量级开发框架的流行，Spring 生态圈出现了 Spring MVC 框架， Spring MVC 是当前最优秀的 MVC 框架。相比于 Struts2 ， Spring MVC 使用更加简单和方便，开发效率更高，并且 Spring MVC 运行速度更快。")]),a._v(" "),s("p",[a._v("MVC 是一种设计模式,Spring MVC 是一款很优秀的 MVC 框架。Spring MVC 可以帮助我们进行更简洁的 Web 层的开发，并且它天生与 Spring 框架集成。Spring MVC 下我们一般把后端项目分为 Service 层（处理业务）、Dao 层（数据库操作）、Entity 层（实体类）、Controller 层(控制层，返回数据给前台页面)。")]),a._v(" "),s("h3",{attrs:{id:"springmvc-工作原理了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-工作原理了解吗"}},[a._v("#")]),a._v(" SpringMVC 工作原理了解吗?")]),a._v(" "),s("p",[s("strong",[a._v("Spring MVC 原理如下图所示：")])]),a._v(" "),s("blockquote",[s("p",[a._v("SpringMVC 工作原理的图解我没有自己画，直接图省事在网上找了一个非常清晰直观的，原出处不明。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/de6d2b213f112297298f3e223bf08f28.png",alt:""}})]),a._v(" "),s("p",[s("strong",[a._v("流程说明（重要）：")])]),a._v(" "),s("ol",[s("li",[a._v("客户端（浏览器）发送请求，直接请求到 "),s("code",[a._v("DispatcherServlet")]),a._v("。")]),a._v(" "),s("li",[s("code",[a._v("DispatcherServlet")]),a._v(" 根据请求信息调用 "),s("code",[a._v("HandlerMapping")]),a._v("，解析请求对应的 "),s("code",[a._v("Handler")]),a._v("。")]),a._v(" "),s("li",[a._v("解析到对应的 "),s("code",[a._v("Handler")]),a._v("（也就是我们平常说的 "),s("code",[a._v("Controller")]),a._v(" 控制器）后，开始由 "),s("code",[a._v("HandlerAdapter")]),a._v(" 适配器处理。")]),a._v(" "),s("li",[s("code",[a._v("HandlerAdapter")]),a._v(" 会根据 "),s("code",[a._v("Handler")]),a._v("来调用真正的处理器开处理请求，并处理相应的业务逻辑。")]),a._v(" "),s("li",[a._v("处理器处理完业务后，会返回一个 "),s("code",[a._v("ModelAndView")]),a._v(" 对象，"),s("code",[a._v("Model")]),a._v(" 是返回的数据对象，"),s("code",[a._v("View")]),a._v(" 是个逻辑上的 "),s("code",[a._v("View")]),a._v("。")]),a._v(" "),s("li",[s("code",[a._v("ViewResolver")]),a._v(" 会根据逻辑 "),s("code",[a._v("View")]),a._v(" 查找实际的 "),s("code",[a._v("View")]),a._v("。")]),a._v(" "),s("li",[s("code",[a._v("DispaterServlet")]),a._v(" 把返回的 "),s("code",[a._v("Model")]),a._v(" 传给 "),s("code",[a._v("View")]),a._v("（视图渲染）。")]),a._v(" "),s("li",[a._v("把 "),s("code",[a._v("View")]),a._v(" 返回给请求者（浏览器）")])]),a._v(" "),s("h2",{attrs:{id:"spring-框架中用到了哪些设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-框架中用到了哪些设计模式"}},[a._v("#")]),a._v(" Spring 框架中用到了哪些设计模式？")]),a._v(" "),s("p",[a._v("关于下面一些设计模式的详细介绍，可以看笔主前段时间的原创文章"),s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&mid=2247485303&idx=1&sn=9e4626a1e3f001f9b0d84a6fa0cff04a&chksm=cea248bcf9d5c1aaf48b67cc52bac74eb29d6037848d6cf213b0e5466f2d1fda970db700ba41&token=255050878&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("《面试官:“谈谈 Spring 中都用到了那些设计模式?”。》"),s("OutboundLink")],1),a._v(" 。")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("工厂设计模式")]),a._v(" : Spring 使用工厂模式通过 "),s("code",[a._v("BeanFactory")]),a._v("、"),s("code",[a._v("ApplicationContext")]),a._v(" 创建 bean 对象。")]),a._v(" "),s("li",[s("strong",[a._v("代理设计模式")]),a._v(" : Spring AOP 功能的实现。")]),a._v(" "),s("li",[s("strong",[a._v("单例设计模式")]),a._v(" : Spring 中的 Bean 默认都是单例的。")]),a._v(" "),s("li",[s("strong",[a._v("模板方法模式")]),a._v(" : Spring 中 "),s("code",[a._v("jdbcTemplate")]),a._v("、"),s("code",[a._v("hibernateTemplate")]),a._v(" 等以 Template 结尾的对数据库操作的类，它们就使用到了模板模式。")]),a._v(" "),s("li",[s("strong",[a._v("包装器设计模式")]),a._v(" : 我们的项目需要连接多个数据库，而且不同的客户在每次访问中根据需要会去访问不同的数据库。这种模式让我们可以根据客户的需求能够动态切换不同的数据源。")]),a._v(" "),s("li",[s("strong",[a._v("观察者模式:")]),a._v(" Spring 事件驱动模型就是观察者模式很经典的一个应用。")]),a._v(" "),s("li",[s("strong",[a._v("适配器模式")]),a._v(" : Spring AOP 的增强或通知(Advice)使用到了适配器模式、spring MVC 中也是用到了适配器模式适配"),s("code",[a._v("Controller")]),a._v("。")]),a._v(" "),s("li",[a._v("......")])]),a._v(" "),s("h2",{attrs:{id:"spring-事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-事务"}},[a._v("#")]),a._v(" Spring 事务")]),a._v(" "),s("p",[a._v("Spring/SpringBoot 模块下专门有一篇是讲 Spring 事务的，总结的非常详细，通俗易懂。")]),a._v(" "),s("h3",{attrs:{id:"spring-管理事务的方式有几种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-管理事务的方式有几种"}},[a._v("#")]),a._v(" Spring 管理事务的方式有几种？")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("编程式事务")]),a._v(" ： 在代码中硬编码(不推荐使用) : 通过 "),s("code",[a._v("TransactionTemplate")]),a._v("或者 "),s("code",[a._v("TransactionManager")]),a._v(" 手动管理事务，实际应用中很少使用，但是对于你理解 Spring 事务管理原理有帮助。")]),a._v(" "),s("li",[s("strong",[a._v("声明式事务")]),a._v(" ： 在 XML 配置文件中配置或者直接基于注解（推荐使用） : 实际是通过 AOP 实现（基于"),s("code",[a._v("@Transactional")]),a._v(" 的全注解方式使用最多）")])]),a._v(" "),s("h3",{attrs:{id:"spring-事务中哪几种事务传播行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-事务中哪几种事务传播行为"}},[a._v("#")]),a._v(" Spring 事务中哪几种事务传播行为?")]),a._v(" "),s("p",[s("strong",[a._v("事务传播行为是为了解决业务层方法之间互相调用的事务问题")]),a._v("。")]),a._v(" "),s("p",[a._v("当事务方法被另一个事务方法调用时，必须指定事务应该如何传播。例如：方法可能继续在现有事务中运行，也可能开启一个新事务，并在自己的事务中运行。")]),a._v(" "),s("p",[a._v("正确的事务传播行为可能的值如下:")]),a._v(" "),s("p",[s("strong",[a._v("1."),s("code",[a._v("TransactionDefinition.PROPAGATION_REQUIRED")])])]),a._v(" "),s("p",[a._v("使用的最多的一个事务传播行为，我们平时经常使用的"),s("code",[a._v("@Transactional")]),a._v("注解默认使用就是这个事务传播行为。如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("2.TransactionDefinition.PROPAGATION_REQUIRES_NEW")])])]),a._v(" "),s("p",[a._v("创建一个新的事务，如果当前存在事务，则把当前事务挂起。也就是说不管外部方法是否开启事务，"),s("code",[a._v("Propagation.REQUIRES_NEW")]),a._v("修饰的内部方法会新开启自己的事务，且开启的事务相互独立，互不干扰。")]),a._v(" "),s("p",[s("strong",[a._v("3."),s("code",[a._v("TransactionDefinition.PROPAGATION_NESTED")])])]),a._v(" "),s("p",[a._v("如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于"),s("code",[a._v("TransactionDefinition.PROPAGATION_REQUIRED")]),a._v("。")]),a._v(" "),s("p",[s("strong",[a._v("4."),s("code",[a._v("TransactionDefinition.PROPAGATION_MANDATORY")])])]),a._v(" "),s("p",[a._v("如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。（mandatory：强制性）")]),a._v(" "),s("p",[a._v("这个使用的很少。")]),a._v(" "),s("p",[a._v("若是错误的配置以下 3 种事务传播行为，事务将不会发生回滚：")]),a._v(" "),s("ul",[s("li",[s("strong",[s("code",[a._v("TransactionDefinition.PROPAGATION_SUPPORTS")])]),a._v(": 如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.PROPAGATION_NOT_SUPPORTED")])]),a._v(": 以非事务方式运行，如果当前存在事务，则把当前事务挂起。")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.PROPAGATION_NEVER")])]),a._v(": 以非事务方式运行，如果当前存在事务，则抛出异常。")])]),a._v(" "),s("h3",{attrs:{id:"spring-事务中的隔离级别有哪几种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-事务中的隔离级别有哪几种"}},[a._v("#")]),a._v(" Spring 事务中的隔离级别有哪几种?")]),a._v(" "),s("p",[a._v("和事务传播行为这块一样，为了方便使用，Spring 也相应地定义了一个枚举类："),s("code",[a._v("Isolation")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Isolation")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("DEFAULT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_DEFAULT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("READ_UNCOMMITTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_READ_UNCOMMITTED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("READ_COMMITTED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_READ_COMMITTED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("REPEATABLE_READ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_REPEATABLE_READ"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("SERIALIZABLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_SERIALIZABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Isolation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br")])]),s("p",[a._v("下面我依次对每一种事务隔离级别进行介绍：")]),a._v(" "),s("ul",[s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_DEFAULT")])]),a._v(" :使用后端数据库默认的隔离级别，MySQL 默认采用的 "),s("code",[a._v("REPEATABLE_READ")]),a._v(" 隔离级别 Oracle 默认采用的 "),s("code",[a._v("READ_COMMITTED")]),a._v(" 隔离级别.")]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_READ_UNCOMMITTED")])]),a._v(" :最低的隔离级别，使用这个隔离级别很少，因为它允许读取尚未提交的数据变更，"),s("strong",[a._v("可能会导致脏读、幻读或不可重复读")])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_READ_COMMITTED")])]),a._v(" : 允许读取并发事务已经提交的数据，"),s("strong",[a._v("可以阻止脏读，但是幻读或不可重复读仍有可能发生")])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_REPEATABLE_READ")])]),a._v(" : 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，"),s("strong",[a._v("可以阻止脏读和不可重复读，但幻读仍有可能发生。")])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("TransactionDefinition.ISOLATION_SERIALIZABLE")])]),a._v(" : 最高的隔离级别，完全服从 ACID 的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，"),s("strong",[a._v("该级别可以防止脏读、不可重复读以及幻读")]),a._v("。但是这将严重影响程序的性能。通常情况下也不会用到该级别。")])]),a._v(" "),s("h3",{attrs:{id:"transactional-rollbackfor-exception-class-注解了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transactional-rollbackfor-exception-class-注解了解吗"}},[a._v("#")]),a._v(" @Transactional(rollbackFor = Exception.class)注解了解吗？")]),a._v(" "),s("p",[s("code",[a._v("Exception")]),a._v(" 分为运行时异常 "),s("code",[a._v("RuntimeException")]),a._v(" 和非运行时异常。事务管理对于企业应用来说是至关重要的，即使出现异常情况，它也可以保证数据的一致性。")]),a._v(" "),s("p",[a._v("当 "),s("code",[a._v("@Transactional")]),a._v(" 注解作用于类上时，该类的所有 public 方法将都具有该类型的事务属性，同时，我们也可以在方法级别使用该标注来覆盖类级别的定义。如果类或者方法加了这个注解，那么这个类里面的方法抛出异常，就会回滚，数据库里面的数据也会回滚。")]),a._v(" "),s("p",[a._v("在 "),s("code",[a._v("@Transactional")]),a._v(" 注解中如果不配置"),s("code",[a._v("rollbackFor")]),a._v("属性,那么事务只会在遇到"),s("code",[a._v("RuntimeException")]),a._v("的时候才会回滚，加上 "),s("code",[a._v("rollbackFor=Exception.class")]),a._v(",可以让事务在遇到非运行时异常时也回滚。")]),a._v(" "),s("h2",{attrs:{id:"jpa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jpa"}},[a._v("#")]),a._v(" JPA")]),a._v(" "),s("h3",{attrs:{id:"如何使用-jpa-在数据库中非持久化一个字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-jpa-在数据库中非持久化一个字段"}},[a._v("#")]),a._v(" 如何使用 JPA 在数据库中非持久化一个字段？")]),a._v(" "),s("p",[a._v("假如我们有下面一个类：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Entity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"USER"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("User")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Id")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@GeneratedValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("strategy "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GenerationType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("AUTO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ID"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Long")]),a._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"USER_NAME"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"PASSWORD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" secrect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br")])]),s("p",[a._v("如果我们想让"),s("code",[a._v("secrect")]),a._v(" 这个字段不被持久化，也就是不被数据库存储怎么办？我们可以采用下面几种方法：")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of static")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Satish"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of final")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("transient")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of transient")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transient")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of @Transient")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("一般使用后面两种方式比较多，我个人使用注解的方式比较多。")]),a._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),s("ul",[s("li",[a._v("《Spring 技术内幕》")]),a._v(" "),s("li",[s("a",{attrs:{href:"http://www.cnblogs.com/wmyskxz/p/8820371.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://www.cnblogs.com/wmyskxz/p/8820371.html"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.journaldev.com/2696/spring-interview-questions-and-answers",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.journaldev.com/2696/spring-interview-questions-and-answers"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.edureka.co/blog/interview-questions/spring-interview-questions/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.edureka.co/blog/interview-questions/spring-interview-questions/"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("https://www.cnblogs.com/clwydjgs/p/9317849.html")]),a._v(" "),s("li",[s("a",{attrs:{href:"https://howtodoinjava.com/interview-questions/top-spring-interview-questions-with-answers/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://howtodoinjava.com/interview-questions/top-spring-interview-questions-with-answers/"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"http://www.tomaszezula.com/2014/02/09/spring-series-part-5-component-vs-bean/",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://www.tomaszezula.com/2014/02/09/spring-series-part-5-component-vs-bean/"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://stackoverflow.com/questions/34172888/difference-between-bean-and-autowired",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://stackoverflow.com/questions/34172888/difference-between-bean-and-autowired"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);