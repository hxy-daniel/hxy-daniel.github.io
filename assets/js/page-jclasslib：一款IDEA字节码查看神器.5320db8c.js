(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{808:function(a,s,t){"use strict";t.r(s);var n=t(1),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("由于后面要分享的一篇文章中用到了这篇文章要推荐的一个插件，所以这里分享一下。非常实用！你会爱上它的！")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/javaguide-tech/blog-images/计算机专业学习指南/image-20201013084919965.png",alt:""}})]),a._v(" "),t("p",[t("strong",[a._v("开始推荐 IDEA 字节码查看神器之前，先来回顾一下 Java 字节码是啥。")])]),a._v(" "),t("h2",{attrs:{id:"何为-java-字节码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何为-java-字节码"}},[a._v("#")]),a._v(" 何为 Java 字节码?")]),a._v(" "),t("p",[a._v("Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。")]),a._v(" "),t("p",[t("strong",[a._v("什么是字节码?采用字节码的好处是什么?")])]),a._v(" "),t("blockquote",[t("p",[a._v("在 Java 中，JVM 可以理解的代码就叫做"),t("code",[a._v("字节码")]),a._v("（即扩展名为 "),t("code",[a._v(".class")]),a._v(" 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java 程序无须重新编译便可在多种不同操作系统的计算机上运行。")])]),a._v(" "),t("p",[t("strong",[a._v("Java 程序从源代码到运行一般有下面 3 步：")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/Java 程序运行过程.png",alt:"Java程序运行过程"}})]),a._v(" "),t("h2",{attrs:{id:"为什么要查看-java-字节码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要查看-java-字节码"}},[a._v("#")]),a._v(" 为什么要查看 Java 字节码？")]),a._v(" "),t("p",[a._v("我们在平时学习的时候，经常需要查看某个 java 类的字节码文件。查看字节码文件更容易让我们搞懂 java 代码背后的原理比如搞懂 java 中的各种语法糖的本质。")]),a._v(" "),t("h2",{attrs:{id:"如何查看-java-字节码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何查看-java-字节码"}},[a._v("#")]),a._v(" 如何查看 Java 字节码?")]),a._v(" "),t("p",[a._v("如果我们通过命令行来查看某个 class 的字节码文件的话，可以直接通过 "),t("code",[a._v("javap")]),a._v(" 命令，不过这种方式太原始了，效率十分低，并且看起来不直观。")]),a._v(" "),t("p",[a._v("下面介绍两种使用 IDEA 查看类对应字节码文件的方式（"),t("em",[t("code",[a._v("javap")]),a._v("这种方式就不提了")]),a._v("）。")]),a._v(" "),t("p",[a._v("我们以这段代码作为案例:")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Main")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),a._v(" flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("p",[a._v("上面这段代码由于使用三目运算符不当导致诡异了 NPE 异常。为了搞清楚事情的原因，我们来看其对应的字节码。")]),a._v(" "),t("h3",{attrs:{id:"使用-idea-自带功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-idea-自带功能"}},[a._v("#")]),a._v(" 使用 IDEA 自带功能")]),a._v(" "),t("p",[a._v("我们点击 "),t("code",[a._v("View -> Show Bytecode")]),a._v(" 即可通过 IDEA 查看某个类对应的字节码文件。")]),a._v(" "),t("blockquote",[t("p",[a._v("需要注意的是："),t("strong",[a._v("查看某个类对应的字节码文件之前确保它已经被编译过。")])])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/javaguide-tech/blog-images/IDEA插件/image-20201012143530226.png",alt:"使用IDEA自带功能查看Java字节码"}})]),a._v(" "),t("p",[a._v("稍等几秒钟之后，你就可以直观到看到对应的类的字节码内容了。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/javaguide-tech/blog-images/2020-10/image-20201012145127465.png",alt:""}})]),a._v(" "),t("p",[a._v("从字节码中可以看出，我圈出来的位置发生了 "),t("strong",[a._v("拆箱操作")]),a._v(" 。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[t("strong",[a._v("装箱")]),a._v("：将基本类型用它们对应的引用类型包装起来；")]),a._v(" "),t("li",[t("strong",[a._v("拆箱")]),a._v("：将包装类型转换为基本数据类型；")])])]),a._v(" "),t("p",[a._v("详细解释下就是："),t("code",[a._v("flag ? 0 : i")]),a._v(" 这行代码中，0 是基本数据类型 int，返回数据的时候 i 会被强制拆箱成 int 类型，由于 i 的值是 null，因此就抛出了 NPE 异常。")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),a._v(" flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("如果，我们把代码中 "),t("code",[a._v("flag")]),a._v(" 变量的值修改为 true 的话，就不会存在 NPE 问题了，因为会直接返回 0，不会进行拆箱操作。")]),a._v(" "),t("h3",{attrs:{id:"使用-idea-插件-jclasslib-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-idea-插件-jclasslib-推荐"}},[a._v("#")]),a._v(" 使用 IDEA 插件 jclasslib(推荐)")]),a._v(" "),t("p",[a._v("相比于 IDEA 自带的查看类字节的功能，我更推荐 "),t("code",[a._v("jclasslib")]),a._v(" 这个插件，非常棒！")]),a._v(" "),t("p",[t("strong",[a._v("使用 "),t("code",[a._v("jclasslib")]),a._v(" 不光可以直观地查看某个类对应的字节码文件，还可以查看类的基本信息、常量池、接口、属性、函数等信息。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/javaguide-tech/blog-images/2020-10/image-20201012145646086.png",alt:""}})]),a._v(" "),t("p",[a._v("我们直接在 IDEA 的插件市场即可找到这个插件。我这里已经安装好了。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/javaguide-tech/blog-images/2020-10-12/image-20201012145900911.png",alt:""}})]),a._v(" "),t("p",[a._v("安装完成之后，重启 IDEA。点击"),t("code",[a._v("View -> Show Bytecode With jclasslib")]),a._v(" 即可通过"),t("code",[a._v("jclasslib")]),a._v(" 查看某个类对应的字节码文件。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/javaguide-tech/blog-images/计算机专业学习指南/image-20201012150252106.png",alt:"使用IDEA插件jclasslib查看类的字节码"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);